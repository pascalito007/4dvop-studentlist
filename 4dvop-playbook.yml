---

# ----------------------------------------------------------
#                ALL VM
# ----------------------------------------------------------
- name: Install docker
  hosts: all
  become: true
  
  pre_tasks:
    - name: Install epel-release
      yum:
        name: epel-release
        state: latest
    - name: Install python pip
      yum:
        name: python-pip
        state: latest
    - name: Install docker-py
      pip:
        name: docker-py

  tasks:
    - include_role: 
        name: docker-install-role


# -----------------------------------------------------------------------------------------
#     REPOSITORY  VM - SETUP postgres for gogs image and Gogs private git repository
# ------------------------------------------------------------------------------------------

- name: setup postgres database required by gogs
  hosts: repository
  become: true

  tasks:
    - include_role: 
        name: docker-postgres-setup-role
      vars:
        docker_postgres__name: 4dvop-pg-ctn
        docker_postgres__image: postgres:11.1-alpine
        docker_postgres__port: 5678
        docker_postgres__superuser_name: superuser
        docker_postgres__superuser_password: supersecret
        docker_postgres__env:
          POSTGRES_DB: 4dvop-db

- name: Deploy Gos, private github repository
  hosts: repository
  become: true

  tasks:
    - name: Install git
      yum:
        name: git
        state: present
        update_cache: yes

    - name: Create app-network network
      docker_network:
        name: app-network

    - name: Create a app-network network and connect containers
      docker_network:
        name: app-network
        connected:
          - gogs-ctn
          - 4dvop-pg-ctn

    - name: Deploy private repository task
      docker_container:
        name: gogs-ctn
        image: gogs/gogs
        state: started
        ports:
          - "23:22"
          - "4000:3000"
        networks:
        - name: app-network
        networks_cli_compatible: yes


# ----------------------------------------------------------
#                REGISTRY VM
# ----------------------------------------------------------
- name: Deploy registry, private docker registry
  hosts: registry
  become: true
  
  tasks:
    - name: Create a registry-network network and connect containers
      docker_network:
        name: registry-network
        connected:
          - registry-ctn
          - registry-frontend-ctn
          
    - name: Deploy private docker registry task
      docker_container:
        name: registry-ctn
        image: registry
        state: started
        ports:
          - "8000:5000"
        networks:
          - name: registry-network

    - name: Deploy private docker frontend registry task
      docker_container:
        name: registry-frontend-ctn
        image: konradkleine/docker-registry-frontend
        state: started
        ports:
          - "90:80"
        networks:
          - name: registry-network
        env:
          ENV_DOCKER_REGISTRY_HOST: registry-ctn
          ENV_DOCKER_REGISTRY_PORT: 80
          ENV_DOCKER_REGISTRY_USE_SSL: 1

# ----------------------------------------------------------
#                APP VM
# ----------------------------------------------------------